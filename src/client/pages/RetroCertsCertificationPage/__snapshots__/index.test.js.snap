// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RetroCertsCertificationPage /> Certify for 2nd week of 2 1`] = `
<RetroCertsCertificationPage
  routeComputedMatch={
    Object {
      "params": Object {
        "week": "2020-02-15",
      },
    }
  }
  setUserData={[Function]}
  userData={
    Object {
      "formData": Array [
        Object {
          "didYouLook": true,
          "fullTime": true,
          "refuseWork": true,
          "schoolOrTraining": true,
          "tooSick": true,
          "weekIndex": 0,
          "workOrEarn": true,
        },
        Object {
          "didYouLook": false,
          "fullTime": false,
          "refuseWork": false,
          "schoolOrTraining": false,
          "tooSick": false,
          "weekIndex": 0,
          "workOrEarn": false,
        },
      ],
      "programPlan": Array [
        "UI full time",
        "UI part time",
      ],
      "status": "ok",
      "weeksToCertify": Array [
        0,
        1,
      ],
    }
  }
>
  <div
    id="overflow-wrapper"
  >
    <Header>
      <header
        className="header border-bottom border-secondary"
      >
        <Navbar
          bg="primary"
          className="justify-content-between"
          collapseOnSelect={false}
          expand={true}
          variant="custom"
        >
          <nav
            className="justify-content-between navbar navbar-expand navbar-custom bg-primary"
          >
            <NavbarBrand
              href="https://ca.gov"
              rel="noopener noreferrer"
              target="_blank"
            >
              <a
                className="navbar-brand"
                href="https://ca.gov"
                rel="noopener noreferrer"
                target="_blank"
              >
                <img
                  alt="California gov logo"
                  height="30"
                  src="images/Ca-Gov-Logo-Gold.svg"
                  width="30"
                />
              </a>
            </NavbarBrand>
            <Nav
              fill={false}
              justify={false}
            >
              <ForwardRef
                as="div"
                className="navbar-nav"
                onSelect={[Function]}
              >
                <div
                  className="navbar-nav"
                  onKeyDown={[Function]}
                >
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov"
                        disabled={false}
                        href="https://edd.ca.gov"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov"
                          href="https://edd.ca.gov"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="home icon"
                            className="icon"
                            height="15"
                            src="images/home.svg"
                            width="15"
                          />
                           
                          <span
                            className="text"
                          >
                            Home
                          </span>
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/login.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/login.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/login.htm"
                        disabled={false}
                        href="https://edd.ca.gov/login.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/login.htm"
                          href="https://edd.ca.gov/login.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <span>
                            <img
                              alt="key icon"
                              className="icon"
                              height="15"
                              src="images/key.svg"
                              width="15"
                            />
                             
                            <span
                              className="text"
                            >
                              Log In
                            </span>
                          </span>
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                </div>
              </ForwardRef>
            </Nav>
          </nav>
        </Navbar>
        <Navbar
          collapseOnSelect={true}
          expand="md"
          variant="light"
        >
          <nav
            className="navbar navbar-expand-md navbar-light"
          >
            <NavbarBrand
              href="https://edd.ca.gov"
              rel="noopener noreferrer"
              target="_blank"
            >
              <a
                className="navbar-brand"
                href="https://edd.ca.gov"
                rel="noopener noreferrer"
                target="_blank"
              >
                <img
                  alt="California gov logo"
                  className="d-inline-block align-top mr-5"
                  height="50"
                  src="images/edd-logo-2-Color.svg"
                  width="150"
                />
              </a>
            </NavbarBrand>
            <NavbarToggle
              aria-controls="responsive-navbar-nav"
              label="Toggle navigation"
            >
              <button
                aria-controls="responsive-navbar-nav"
                aria-label="Toggle navigation"
                className="navbar-toggler collapsed"
                onClick={[Function]}
                type="button"
              >
                <span
                  className="navbar-toggler-icon"
                />
              </button>
            </NavbarToggle>
            <NavbarCollapse
              className="justify-content-between ml-5 mr-5 pl-5"
            >
              <Collapse
                appear={false}
                className="justify-content-between ml-5 mr-5 pl-5"
                dimension="height"
                getDimensionValue={[Function]}
                in={false}
                mountOnEnter={false}
                timeout={300}
                unmountOnExit={false}
              >
                <Transition
                  addEndListener={[Function]}
                  appear={false}
                  aria-expanded={null}
                  enter={true}
                  exit={true}
                  in={false}
                  mountOnEnter={false}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <div
                    aria-expanded={null}
                    className="justify-content-between ml-5 mr-5 pl-5 navbar-collapse collapse"
                  >
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/jobs.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/jobs.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/jobs.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/jobs.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Jobs
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/claims.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/claims.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/claims.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/claims.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Claims
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/employers.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/employers.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/employers.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/employers.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Employers
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/newsroom.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/newsroom.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/newsroom.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/newsroom.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Newsroom
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/serp.html?q="
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/serp.html?q="
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/serp.html?q="
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/serp.html?q="
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Search
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                  </div>
                </Transition>
              </Collapse>
            </NavbarCollapse>
          </nav>
        </Navbar>
      </header>
    </Header>
    <main
      className="questions"
      id="certification-page"
    >
      <div
        className="container p-4"
      >
        <h1>
          Retroactively Certify and Review
        </h1>
        <LanguageSelector
          className="mt-3 mb-4"
        >
          <Button
            active={false}
            className="text-dark bg-light mt-3 mb-4"
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="outline-secondary"
          >
            <button
              className="text-dark bg-light mt-3 mb-4 btn btn-outline-secondary"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Español
            </button>
          </Button>
        </LanguageSelector>
        <h2
          className="h3 font-weight-bold mt-4"
        >
          <Trans
            i18nKey="retrocerts-certification.form-header"
            t={[Function]}
            values={
              Object {
                "weekForUser": 2,
                "weekString": "02/09/2020 - 02/15/2020",
              }
            }
          >
            Week 2: 02/09/2020 - 02/15/2020
          </Trans>
        </h2>
        <p>
          <Trans
            i18nKey="retrocerts-certification.p1-multiple"
            t={[Function]}
            values={
              Object {
                "numberOfWeeks": 2,
                "weekForUser": 2,
              }
            }
          >
            You are on Week 2 of 2 weeks to retroactively certify.
          </Trans>
           Your previous weeks are saved.
        </p>
        <Form
          inline={false}
          noValidate={true}
          onSubmit={[Function]}
          validated={false}
        >
          <form
            className=""
            noValidate={true}
            onSubmit={[Function]}
          >
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.help-tooSick"
                  t={[Function]}
                />
              }
              ifYes={false}
              inputName="tooSick"
              key="1tooSick"
              onChange={[Function]}
              questionNumber={1}
              questionText="Were you too sick or injured to work?"
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className=""
                  controlId="tooSick"
                >
                  <div
                    className="form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="tooSick"
                        >
                          1
                          . 
                          Were you too sick or injured to work?
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.help-tooSick"
                            t={[Function]}
                          >
                            You must be well enough to work every day of the week to receive full benefits. Check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                             if a workday was missed due to being sick or injured.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="tooSickradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="tooSick"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="tooSick"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="tooSickradioYes"
                              name="tooSick"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="tooSickradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={true}
                        disabled={false}
                        id="tooSickradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="tooSick"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={true}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="tooSick"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={true}
                              className="form-check-input"
                              disabled={false}
                              id="tooSickradioNo"
                              name="tooSick"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="tooSickradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.help-couldNotAcceptWork"
                  t={[Function]}
                />
              }
              inputName="couldNotAcceptWork"
              key="1couldNotAcceptWork"
              onChange={[Function]}
              questionNumber={2}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.couldNotAcceptWork"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/09/2020 - 02/15/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className="unchecked"
                  controlId="couldNotAcceptWork"
                >
                  <div
                    className="unchecked form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="couldNotAcceptWork"
                        >
                          2
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.couldNotAcceptWork"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/09/2020 - 02/15/2020",
                              }
                            }
                          >
                            Was there any reason (other than sickness or injury) that you could not have accepted part-time work, 
                            <strong
                              key="strong-1"
                            >
                              as instructed by EDD
                            </strong>
                            ?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.help-couldNotAcceptWork"
                            t={[Function]}
                          >
                            You must be available for work to receive unemployment benefits. Available means you are ready and willing to accept work that matches your occupational skills and educational background. If you refused part-time work for any reason other than being sick or injured, check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                            .
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="couldNotAcceptWorkradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="couldNotAcceptWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="couldNotAcceptWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="couldNotAcceptWorkradioYes"
                              name="couldNotAcceptWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="couldNotAcceptWorkradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="couldNotAcceptWorkradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="couldNotAcceptWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="couldNotAcceptWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="couldNotAcceptWorkradioNo"
                              name="couldNotAcceptWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="couldNotAcceptWorkradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.help-didYouLook"
                  t={[Function]}
                />
              }
              ifYes={false}
              inputName="didYouLook"
              key="1didYouLook"
              onChange={[Function]}
              questionNumber={3}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.didYouLook"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/09/2020 - 02/15/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className=""
                  controlId="didYouLook"
                >
                  <div
                    className="form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="didYouLook"
                        >
                          3
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.didYouLook"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/09/2020 - 02/15/2020",
                              }
                            }
                          >
                            Did you look for work?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.help-didYouLook"
                            t={[Function]}
                          >
                            Work searches may include in person, mail, telephone, or internet contacts with employers.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="didYouLookradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="didYouLook"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="didYouLook"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="didYouLookradioYes"
                              name="didYouLook"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="didYouLookradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={true}
                        disabled={false}
                        id="didYouLookradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="didYouLook"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={true}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="didYouLook"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={true}
                              className="form-check-input"
                              disabled={false}
                              id="didYouLookradioNo"
                              name="didYouLook"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="didYouLookradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.help-refuseWork"
                  t={[Function]}
                />
              }
              ifYes={false}
              inputName="refuseWork"
              key="1refuseWork"
              onChange={[Function]}
              questionNumber={4}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.refuseWork"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/09/2020 - 02/15/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className=""
                  controlId="refuseWork"
                >
                  <div
                    className="form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="refuseWork"
                        >
                          4
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.refuseWork"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/09/2020 - 02/15/2020",
                              }
                            }
                          >
                            Did you refuse any work?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.help-refuseWork"
                            t={[Function]}
                          >
                            If work was refused, a determination will be scheduled. Union members, check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                             if a union referral to a job was refused.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="refuseWorkradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="refuseWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="refuseWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="refuseWorkradioYes"
                              name="refuseWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="refuseWorkradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={true}
                        disabled={false}
                        id="refuseWorkradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="refuseWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={true}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="refuseWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={true}
                              className="form-check-input"
                              disabled={false}
                              id="refuseWorkradioNo"
                              name="refuseWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="refuseWorkradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.help-schoolOrTraining"
                  t={[Function]}
                />
              }
              ifYes={false}
              inputName="schoolOrTraining"
              key="1schoolOrTraining"
              onChange={[Function]}
              questionNumber={5}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.schoolOrTraining"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/09/2020 - 02/15/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className=""
                  controlId="schoolOrTraining"
                >
                  <div
                    className="form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="schoolOrTraining"
                        >
                          5
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.schoolOrTraining"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/09/2020 - 02/15/2020",
                              }
                            }
                          >
                            Did you 
                            <strong
                              key="strong-1"
                            >
                              begin
                            </strong>
                             attending any kind of school or training? Select 
                            <strong
                              key="strong-3"
                            >
                              Yes
                            </strong>
                             only if you began attending school between 02/09/2020 - 02/15/2020.
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.help-schoolOrTraining"
                            t={[Function]}
                          >
                            Check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                             only if school or training 
                            <strong
                              key="strong-3"
                            >
                              began
                            </strong>
                             during this work week.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="schoolOrTrainingradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="schoolOrTraining"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="schoolOrTraining"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="schoolOrTrainingradioYes"
                              name="schoolOrTraining"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="schoolOrTrainingradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={true}
                        disabled={false}
                        id="schoolOrTrainingradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="schoolOrTraining"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={true}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="schoolOrTraining"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={true}
                              className="form-check-input"
                              disabled={false}
                              id="schoolOrTrainingradioNo"
                              name="schoolOrTraining"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="schoolOrTrainingradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText="Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received."
              ifYes={false}
              inputName="workOrEarn"
              key="1workOrEarn"
              onChange={[Function]}
              questionNumber={6}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-part-time.workOrEarn"
                  t={[Function]}
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className=""
                  controlId="workOrEarn"
                >
                  <div
                    className="form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="workOrEarn"
                        >
                          6
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-part-time.workOrEarn"
                            t={[Function]}
                          >
                            Did you work or earn any money, 
                            <strong
                              key="strong-1"
                            >
                              whether you were paid or not
                            </strong>
                            ?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received.
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="workOrEarnradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="workOrEarn"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="workOrEarn"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="workOrEarnradioYes"
                              name="workOrEarn"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="workOrEarnradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={true}
                        disabled={false}
                        id="workOrEarnradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="workOrEarn"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={true}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="workOrEarn"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={true}
                              className="form-check-input"
                              disabled={false}
                              id="workOrEarnradioNo"
                              name="workOrEarn"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="workOrEarnradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <PerjuryCheckbox
              isAnyWeekPua={false}
            >
              <FormGroup
                className="unchecked"
                controlId="perjury-checkbox"
              >
                <div
                  className="unchecked form-group"
                >
                  <FormText
                    as="h3"
                  >
                    <h3
                      className="form-text"
                    >
                      Acknowledgement
                    </h3>
                  </FormText>
                  <ul>
                    <li>
                      I understand the questions I answered through this automated system.
                    </li>
                    <li>
                      I know the law provides penalties if I make false statements or withhold facts to receive benefits; and my answers are true and correct.
                    </li>
                    <li>
                      I declare under penalty of perjury that I am a US Citizen or National; or an Alien in satisfactory immigration status and permitted to work by the United States Citizenship and Immigration Service.
                    </li>
                    <li>
                      I understand when submitting my request for benefits my submission is considered the same as my written signature.
                    </li>
                  </ul>
                  <FormRow>
                    <div
                      className="form-row"
                    >
                      <Col
                        md="auto"
                      >
                        <div
                          className="col-md-auto"
                        >
                          <FormCheck
                            checked={false}
                            disabled={false}
                            inline={false}
                            isInvalid={false}
                            isValid={false}
                            onChange={[Function]}
                            required={true}
                            title=""
                            type="checkbox"
                          >
                            <div
                              className="form-check"
                            >
                              <FormCheckInput
                                as="input"
                                checked={false}
                                disabled={false}
                                isInvalid={false}
                                isStatic={true}
                                isValid={false}
                                onChange={[Function]}
                                required={true}
                                type="checkbox"
                              >
                                <input
                                  checked={false}
                                  className="form-check-input position-static"
                                  disabled={false}
                                  id="perjury-checkbox"
                                  onChange={[Function]}
                                  required={true}
                                  type="checkbox"
                                />
                              </FormCheckInput>
                            </div>
                          </FormCheck>
                        </div>
                      </Col>
                      <Col>
                        <div
                          className="col"
                        >
                          <FormLabel
                            column={false}
                            srOnly={false}
                          >
                            <label
                              className="form-label"
                              htmlFor="perjury-checkbox"
                            >
                              You must indicate your acceptance of the statement by checking the box before your certification can be submitted.
                            </label>
                          </FormLabel>
                        </div>
                      </Col>
                    </div>
                  </FormRow>
                  <Feedback
                    type="invalid"
                  >
                    <div
                      className="invalid-feedback"
                    >
                      This field is required.
                    </div>
                  </Feedback>
                  <FormText
                    as="p"
                  >
                    <p
                      className="form-text"
                    >
                      <Trans
                        i18nKey="retrocerts-certification.submit-p1"
                        t={[Function]}
                      >
                        You are about to submit your retroactive certifications. You will 
                        <strong
                          key="strong-1"
                        >
                          not
                        </strong>
                         be able to change your answers once you select 
                        <strong
                          key="strong-3"
                        >
                          Submit
                        </strong>
                        .
                      </Trans>
                    </p>
                  </FormText>
                </div>
              </FormGroup>
            </PerjuryCheckbox>
            <FormRow>
              <div
                className="form-row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <Button
                      active={false}
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="text-dark bg-light"
                      disabled={false}
                      onClick={[Function]}
                      to="undefined/2020-02-08"
                      type="button"
                      variant="outline-secondary"
                    >
                      <Link
                        className="text-dark bg-light btn btn-outline-secondary"
                        disabled={false}
                        onClick={[Function]}
                        to="undefined/2020-02-08"
                      >
                        <LinkAnchor
                          className="text-dark bg-light btn btn-outline-secondary"
                          disabled={false}
                          href="/undefined/2020-02-08"
                          navigate={[Function]}
                          onClick={[Function]}
                        >
                          <a
                            className="text-dark bg-light btn btn-outline-secondary"
                            disabled={false}
                            href="/undefined/2020-02-08"
                            onClick={[Function]}
                          >
                            Back to Previous Week
                          </a>
                        </LinkAnchor>
                      </Link>
                    </Button>
                  </div>
                </Col>
                <Col
                  style={
                    Object {
                      "textAlign": "end",
                    }
                  }
                >
                  <div
                    className="col"
                    style={
                      Object {
                        "textAlign": "end",
                      }
                    }
                  >
                    <Button
                      active={false}
                      disabled={false}
                      type="submit"
                      variant="secondary"
                    >
                      <button
                        className="btn btn-secondary"
                        disabled={false}
                        type="submit"
                      >
                        Submit
                      </button>
                    </Button>
                  </div>
                </Col>
              </div>
            </FormRow>
          </form>
        </Form>
      </div>
    </main>
    <Footer
      backToTopTag="certification-page"
    >
      <footer
        className="footer"
      >
        <Navbar
          bg="dark"
          className="justify-content-between"
          collapseOnSelect={false}
          expand={true}
          variant="custom"
        >
          <nav
            className="justify-content-between navbar navbar-expand navbar-custom bg-dark"
          >
            <Nav
              className="flex-wrap"
              fill={false}
              justify={false}
            >
              <ForwardRef
                as="div"
                className="flex-wrap navbar-nav"
                onSelect={[Function]}
              >
                <div
                  className="flex-wrap navbar-nav"
                  onKeyDown={[Function]}
                >
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="/#certification-page"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="/#certification-page"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="/#certification-page"
                        disabled={false}
                        href="/#certification-page"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="/#certification-page"
                          href="/#certification-page"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                        >
                          Back to Top
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/"
                          href="https://edd.ca.gov/about_edd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          About EDD
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/contact_edd.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/contact_edd.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/contact_edd.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/contact_edd.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/contact_edd.htm"
                          href="https://edd.ca.gov/about_edd/contact_edd.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Contact EDD
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                          href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Conditions of Use
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/privacy_policy.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/privacy_policy.htm"
                          href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Privacy Policy
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/accessibility.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/accessibility.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/accessibility.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/accessibility.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/accessibility.htm"
                          href="https://edd.ca.gov/about_edd/accessibility.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Accessibility
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/sitemap.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/sitemap.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/sitemap.htm"
                        disabled={false}
                        href="https://edd.ca.gov/sitemap.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/sitemap.htm"
                          href="https://edd.ca.gov/sitemap.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Site Map
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                </div>
              </ForwardRef>
            </Nav>
            <Nav
              className="flex-wrap"
              fill={false}
              justify={false}
            >
              <ForwardRef
                as="div"
                className="flex-wrap navbar-nav"
                onSelect={[Function]}
              >
                <div
                  className="flex-wrap navbar-nav"
                  onKeyDown={[Function]}
                >
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.facebook.com/californiaedd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.facebook.com/californiaedd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.facebook.com/californiaedd/"
                        disabled={false}
                        href="https://www.facebook.com/californiaedd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.facebook.com/californiaedd/"
                          href="https://www.facebook.com/californiaedd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="Facebook icon"
                            height="15"
                            src="images/facebook.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://twitter.com/CA_EDD"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://twitter.com/CA_EDD"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://twitter.com/CA_EDD"
                        disabled={false}
                        href="https://twitter.com/CA_EDD"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://twitter.com/CA_EDD"
                          href="https://twitter.com/CA_EDD"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="Twitter icon"
                            height="15"
                            src="images/twitter.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.linkedin.com/company/californiaedd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.linkedin.com/company/californiaedd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.linkedin.com/company/californiaedd/"
                        disabled={false}
                        href="https://www.linkedin.com/company/californiaedd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.linkedin.com/company/californiaedd/"
                          href="https://www.linkedin.com/company/californiaedd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="LinkedIn icon"
                            height="15"
                            src="images/linkedin.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.instagram.com/ca_edd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.instagram.com/ca_edd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.instagram.com/ca_edd/"
                        disabled={false}
                        href="https://www.instagram.com/ca_edd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.instagram.com/ca_edd/"
                          href="https://www.instagram.com/ca_edd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="Instagram icon"
                            height="15"
                            src="images/instagram.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.youtube.com/user/CaliforniaEDD"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.youtube.com/user/CaliforniaEDD"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.youtube.com/user/CaliforniaEDD"
                        disabled={false}
                        href="https://www.youtube.com/user/CaliforniaEDD"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.youtube.com/user/CaliforniaEDD"
                          href="https://www.youtube.com/user/CaliforniaEDD"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="YouTube icon"
                            height="15"
                            src="images/youtube.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                </div>
              </ForwardRef>
            </Nav>
          </nav>
        </Navbar>
        <div
          className="bg-light secondary-footer"
        >
          <Container
            fluid={false}
          >
            <div
              className="container"
            >
              Copyright © 2020 State of California
            </div>
          </Container>
        </div>
      </footer>
    </Footer>
  </div>
</RetroCertsCertificationPage>
`;

exports[`<RetroCertsCertificationPage /> Certify for one week of 2 1`] = `
<RetroCertsCertificationPage
  routeComputedMatch={
    Object {
      "params": Object {
        "week": "2020-02-08",
      },
    }
  }
  setUserData={[Function]}
  userData={
    Object {
      "formData": Array [
        Object {
          "fullTime": true,
          "tooSick": false,
          "weekIndex": 0,
        },
      ],
      "programPlan": Array [
        "UI full time",
        "UI part time",
      ],
      "status": "ok",
      "weeksToCertify": Array [
        0,
        1,
      ],
    }
  }
>
  <div
    id="overflow-wrapper"
  >
    <Header>
      <header
        className="header border-bottom border-secondary"
      >
        <Navbar
          bg="primary"
          className="justify-content-between"
          collapseOnSelect={false}
          expand={true}
          variant="custom"
        >
          <nav
            className="justify-content-between navbar navbar-expand navbar-custom bg-primary"
          >
            <NavbarBrand
              href="https://ca.gov"
              rel="noopener noreferrer"
              target="_blank"
            >
              <a
                className="navbar-brand"
                href="https://ca.gov"
                rel="noopener noreferrer"
                target="_blank"
              >
                <img
                  alt="California gov logo"
                  height="30"
                  src="images/Ca-Gov-Logo-Gold.svg"
                  width="30"
                />
              </a>
            </NavbarBrand>
            <Nav
              fill={false}
              justify={false}
            >
              <ForwardRef
                as="div"
                className="navbar-nav"
                onSelect={[Function]}
              >
                <div
                  className="navbar-nav"
                  onKeyDown={[Function]}
                >
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov"
                        disabled={false}
                        href="https://edd.ca.gov"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov"
                          href="https://edd.ca.gov"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="home icon"
                            className="icon"
                            height="15"
                            src="images/home.svg"
                            width="15"
                          />
                           
                          <span
                            className="text"
                          >
                            Home
                          </span>
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/login.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/login.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/login.htm"
                        disabled={false}
                        href="https://edd.ca.gov/login.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/login.htm"
                          href="https://edd.ca.gov/login.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <span>
                            <img
                              alt="key icon"
                              className="icon"
                              height="15"
                              src="images/key.svg"
                              width="15"
                            />
                             
                            <span
                              className="text"
                            >
                              Log In
                            </span>
                          </span>
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                </div>
              </ForwardRef>
            </Nav>
          </nav>
        </Navbar>
        <Navbar
          collapseOnSelect={true}
          expand="md"
          variant="light"
        >
          <nav
            className="navbar navbar-expand-md navbar-light"
          >
            <NavbarBrand
              href="https://edd.ca.gov"
              rel="noopener noreferrer"
              target="_blank"
            >
              <a
                className="navbar-brand"
                href="https://edd.ca.gov"
                rel="noopener noreferrer"
                target="_blank"
              >
                <img
                  alt="California gov logo"
                  className="d-inline-block align-top mr-5"
                  height="50"
                  src="images/edd-logo-2-Color.svg"
                  width="150"
                />
              </a>
            </NavbarBrand>
            <NavbarToggle
              aria-controls="responsive-navbar-nav"
              label="Toggle navigation"
            >
              <button
                aria-controls="responsive-navbar-nav"
                aria-label="Toggle navigation"
                className="navbar-toggler collapsed"
                onClick={[Function]}
                type="button"
              >
                <span
                  className="navbar-toggler-icon"
                />
              </button>
            </NavbarToggle>
            <NavbarCollapse
              className="justify-content-between ml-5 mr-5 pl-5"
            >
              <Collapse
                appear={false}
                className="justify-content-between ml-5 mr-5 pl-5"
                dimension="height"
                getDimensionValue={[Function]}
                in={false}
                mountOnEnter={false}
                timeout={300}
                unmountOnExit={false}
              >
                <Transition
                  addEndListener={[Function]}
                  appear={false}
                  aria-expanded={null}
                  enter={true}
                  exit={true}
                  in={false}
                  mountOnEnter={false}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <div
                    aria-expanded={null}
                    className="justify-content-between ml-5 mr-5 pl-5 navbar-collapse collapse"
                  >
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/jobs.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/jobs.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/jobs.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/jobs.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Jobs
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/claims.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/claims.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/claims.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/claims.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Claims
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/employers.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/employers.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/employers.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/employers.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Employers
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/newsroom.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/newsroom.htm"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/newsroom.htm"
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/newsroom.htm"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Newsroom
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                    <NavLink
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      disabled={false}
                      href="https://edd.ca.gov/serp.html?q="
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <ForwardRef
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "SafeAnchor",
                            "render": [Function],
                          }
                        }
                        className="nav-link"
                        disabled={false}
                        href="https://edd.ca.gov/serp.html?q="
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <SafeAnchor
                          className="nav-link"
                          disabled={false}
                          href="https://edd.ca.gov/serp.html?q="
                          onClick={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <a
                            className="nav-link"
                            href="https://edd.ca.gov/serp.html?q="
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                          >
                            <span>
                              Search
                            </span>
                          </a>
                        </SafeAnchor>
                      </ForwardRef>
                    </NavLink>
                  </div>
                </Transition>
              </Collapse>
            </NavbarCollapse>
          </nav>
        </Navbar>
      </header>
    </Header>
    <main
      className="questions"
      id="certification-page"
    >
      <div
        className="container p-4"
      >
        <h1>
          Retroactively Certify and Review
        </h1>
        <LanguageSelector
          className="mt-3 mb-4"
        >
          <Button
            active={false}
            className="text-dark bg-light mt-3 mb-4"
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="outline-secondary"
          >
            <button
              className="text-dark bg-light mt-3 mb-4 btn btn-outline-secondary"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Español
            </button>
          </Button>
        </LanguageSelector>
        <h2
          className="h3 font-weight-bold mt-4"
        >
          <Trans
            i18nKey="retrocerts-certification.form-header"
            t={[Function]}
            values={
              Object {
                "weekForUser": 1,
                "weekString": "02/02/2020 - 02/08/2020",
              }
            }
          >
            Week 1: 02/02/2020 - 02/08/2020
          </Trans>
        </h2>
        <p>
          <Trans
            i18nKey="retrocerts-certification.p1-multiple"
            t={[Function]}
            values={
              Object {
                "numberOfWeeks": 2,
                "weekForUser": 1,
              }
            }
          >
            You are on Week 1 of 2 weeks to retroactively certify.
          </Trans>
        </p>
        <Form
          inline={false}
          noValidate={true}
          onSubmit={[Function]}
          validated={false}
        >
          <form
            className=""
            noValidate={true}
            onSubmit={[Function]}
          >
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.help-tooSick"
                  t={[Function]}
                />
              }
              ifYes={false}
              inputName="tooSick"
              key="0tooSick"
              onChange={[Function]}
              questionNumber={1}
              questionText="Were you too sick or injured to work?"
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className=""
                  controlId="tooSick"
                >
                  <div
                    className="form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="tooSick"
                        >
                          1
                          . 
                          Were you too sick or injured to work?
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.help-tooSick"
                            t={[Function]}
                          >
                            You must be well enough to work every day of the week to receive full benefits. Check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                             if a workday was missed due to being sick or injured.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="tooSickradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="tooSick"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="tooSick"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="tooSickradioYes"
                              name="tooSick"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="tooSickradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={true}
                        disabled={false}
                        id="tooSickradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="tooSick"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={true}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="tooSick"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={true}
                              className="form-check-input"
                              disabled={false}
                              id="tooSickradioNo"
                              name="tooSick"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="tooSickradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.help-couldNotAcceptWork"
                  t={[Function]}
                />
              }
              inputName="couldNotAcceptWork"
              key="0couldNotAcceptWork"
              onChange={[Function]}
              questionNumber={2}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.couldNotAcceptWork"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/02/2020 - 02/08/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className="unchecked"
                  controlId="couldNotAcceptWork"
                >
                  <div
                    className="unchecked form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="couldNotAcceptWork"
                        >
                          2
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.couldNotAcceptWork"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/02/2020 - 02/08/2020",
                              }
                            }
                          >
                            Was there any reason (other than sickness or injury) that you could not have accepted full-time work 
                            <strong
                              key="strong-1"
                            >
                              each workday
                            </strong>
                            ?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.help-couldNotAcceptWork"
                            t={[Function]}
                          >
                            You must be available for work to receive unemployment benefits. Available means you are ready and willing to accept work that matches your occupational skills and educational background. If full-time work was refused for any reason other than being sick or injured, check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                            .
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="couldNotAcceptWorkradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="couldNotAcceptWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="couldNotAcceptWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="couldNotAcceptWorkradioYes"
                              name="couldNotAcceptWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="couldNotAcceptWorkradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="couldNotAcceptWorkradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="couldNotAcceptWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="couldNotAcceptWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="couldNotAcceptWorkradioNo"
                              name="couldNotAcceptWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="couldNotAcceptWorkradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.help-didYouLook"
                  t={[Function]}
                />
              }
              inputName="didYouLook"
              key="0didYouLook"
              onChange={[Function]}
              questionNumber={3}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.didYouLook"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/02/2020 - 02/08/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className="unchecked"
                  controlId="didYouLook"
                >
                  <div
                    className="unchecked form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="didYouLook"
                        >
                          3
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.didYouLook"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/02/2020 - 02/08/2020",
                              }
                            }
                          >
                            Did you look for work?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.help-didYouLook"
                            t={[Function]}
                          >
                            Work searches may include in person, mail, telephone, or internet contacts with employers.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="didYouLookradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="didYouLook"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="didYouLook"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="didYouLookradioYes"
                              name="didYouLook"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="didYouLookradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="didYouLookradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="didYouLook"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="didYouLook"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="didYouLookradioNo"
                              name="didYouLook"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="didYouLookradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.help-refuseWork"
                  t={[Function]}
                />
              }
              inputName="refuseWork"
              key="0refuseWork"
              onChange={[Function]}
              questionNumber={4}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.refuseWork"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/02/2020 - 02/08/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className="unchecked"
                  controlId="refuseWork"
                >
                  <div
                    className="unchecked form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="refuseWork"
                        >
                          4
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.refuseWork"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/02/2020 - 02/08/2020",
                              }
                            }
                          >
                            Did you refuse any work?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.help-refuseWork"
                            t={[Function]}
                          >
                            If work was refused, a determination will be scheduled. Union members, check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                             if a union referral to a job was refused.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="refuseWorkradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="refuseWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="refuseWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="refuseWorkradioYes"
                              name="refuseWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="refuseWorkradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="refuseWorkradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="refuseWork"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="refuseWork"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="refuseWorkradioNo"
                              name="refuseWork"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="refuseWorkradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.help-schoolOrTraining"
                  t={[Function]}
                />
              }
              inputName="schoolOrTraining"
              key="0schoolOrTraining"
              onChange={[Function]}
              questionNumber={5}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.schoolOrTraining"
                  t={[Function]}
                  values={
                    Object {
                      "weekString": "02/02/2020 - 02/08/2020",
                    }
                  }
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className="unchecked"
                  controlId="schoolOrTraining"
                >
                  <div
                    className="unchecked form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="schoolOrTraining"
                        >
                          5
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.schoolOrTraining"
                            t={[Function]}
                            values={
                              Object {
                                "weekString": "02/02/2020 - 02/08/2020",
                              }
                            }
                          >
                            Did you 
                            <strong
                              key="strong-1"
                            >
                              begin
                            </strong>
                             attending any kind of school or training? Select 
                            <strong
                              key="strong-3"
                            >
                              Yes
                            </strong>
                             only if you began attending school between 02/02/2020 - 02/08/2020.
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.help-schoolOrTraining"
                            t={[Function]}
                          >
                            Check 
                            <strong
                              key="strong-1"
                            >
                              Yes
                            </strong>
                             only if school or training 
                            <strong
                              key="strong-3"
                            >
                              began
                            </strong>
                             during this work week.
                          </Trans>
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="schoolOrTrainingradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="schoolOrTraining"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="schoolOrTraining"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="schoolOrTrainingradioYes"
                              name="schoolOrTraining"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="schoolOrTrainingradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="schoolOrTrainingradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="schoolOrTraining"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="schoolOrTraining"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="schoolOrTrainingradioNo"
                              name="schoolOrTraining"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="schoolOrTrainingradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <YesNoQuestion
              helpText="Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received."
              inputName="workOrEarn"
              key="0workOrEarn"
              onChange={[Function]}
              questionNumber={6}
              questionText={
                <Trans
                  i18nKey="retrocerts-certification.questions.ui-full-time.workOrEarn"
                  t={[Function]}
                />
              }
            >
              <div
                className="bg-light p-2 mt-2 mb-2"
              >
                <FormGroup
                  className="unchecked"
                  controlId="workOrEarn"
                >
                  <div
                    className="unchecked form-group"
                  >
                    <fieldset>
                      <FormLabel
                        as="legend"
                        column={false}
                        srOnly={false}
                      >
                        <legend
                          className="form-label"
                          htmlFor="workOrEarn"
                        >
                          6
                          . 
                          <Trans
                            i18nKey="retrocerts-certification.questions.ui-full-time.workOrEarn"
                            t={[Function]}
                          >
                            Did you work or earn any money, 
                            <strong
                              key="strong-1"
                            >
                              whether you were paid or not
                            </strong>
                            ?
                          </Trans>
                        </legend>
                      </FormLabel>
                      <FormText
                        className="help-text"
                      >
                        <small
                          className="help-text form-text"
                        >
                          Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received.
                        </small>
                      </FormText>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="workOrEarnradioYes"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="Yes"
                        label="Yes"
                        name="workOrEarn"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="Yes"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="workOrEarn"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="Yes"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="workOrEarnradioYes"
                              name="workOrEarn"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="Yes"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="workOrEarnradioYes"
                              title=""
                            >
                              Yes
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <FormCheck
                        checked={false}
                        disabled={false}
                        id="workOrEarnradioNo"
                        inline={true}
                        isInvalid={false}
                        isValid={false}
                        key="No"
                        label="No"
                        name="workOrEarn"
                        onChange={[Function]}
                        required={true}
                        title=""
                        type="radio"
                        value="No"
                      >
                        <div
                          className="form-check form-check-inline"
                        >
                          <FormCheckInput
                            as="input"
                            checked={false}
                            disabled={false}
                            isInvalid={false}
                            isStatic={false}
                            isValid={false}
                            name="workOrEarn"
                            onChange={[Function]}
                            required={true}
                            type="radio"
                            value="No"
                          >
                            <input
                              checked={false}
                              className="form-check-input"
                              disabled={false}
                              id="workOrEarnradioNo"
                              name="workOrEarn"
                              onChange={[Function]}
                              required={true}
                              type="radio"
                              value="No"
                            />
                          </FormCheckInput>
                          <FormCheckLabel
                            title=""
                          >
                            <label
                              className="form-check-label"
                              htmlFor="workOrEarnradioNo"
                              title=""
                            >
                              No
                            </label>
                          </FormCheckLabel>
                        </div>
                      </FormCheck>
                      <Feedback
                        type="invalid"
                      >
                        <div
                          className="invalid-feedback"
                        >
                          This field is required.
                        </div>
                      </Feedback>
                    </fieldset>
                  </div>
                </FormGroup>
              </div>
            </YesNoQuestion>
            <FormRow>
              <div
                className="form-row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <Button
                      active={false}
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      className="text-dark bg-light"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      variant="outline-secondary"
                    >
                      <Link
                        className="text-dark bg-light btn btn-outline-secondary"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <LinkAnchor
                          className="text-dark bg-light btn btn-outline-secondary"
                          disabled={false}
                          href=""
                          navigate={[Function]}
                          onClick={[Function]}
                        >
                          <a
                            className="text-dark bg-light btn btn-outline-secondary"
                            disabled={false}
                            href=""
                            onClick={[Function]}
                          >
                            Back
                          </a>
                        </LinkAnchor>
                      </Link>
                    </Button>
                  </div>
                </Col>
                <Col
                  style={
                    Object {
                      "textAlign": "end",
                    }
                  }
                >
                  <div
                    className="col"
                    style={
                      Object {
                        "textAlign": "end",
                      }
                    }
                  >
                    <Button
                      active={false}
                      disabled={false}
                      type="submit"
                      variant="secondary"
                    >
                      <button
                        className="btn btn-secondary"
                        disabled={false}
                        type="submit"
                      >
                        <Trans
                          i18nKey="retrocerts-certification.button-next"
                          t={[Function]}
                          values={
                            Object {
                              "nextWeekForUser": 2,
                            }
                          }
                        >
                          Save and Continue to Week 2
                        </Trans>
                      </button>
                    </Button>
                  </div>
                </Col>
              </div>
            </FormRow>
          </form>
        </Form>
      </div>
    </main>
    <Footer
      backToTopTag="certification-page"
    >
      <footer
        className="footer"
      >
        <Navbar
          bg="dark"
          className="justify-content-between"
          collapseOnSelect={false}
          expand={true}
          variant="custom"
        >
          <nav
            className="justify-content-between navbar navbar-expand navbar-custom bg-dark"
          >
            <Nav
              className="flex-wrap"
              fill={false}
              justify={false}
            >
              <ForwardRef
                as="div"
                className="flex-wrap navbar-nav"
                onSelect={[Function]}
              >
                <div
                  className="flex-wrap navbar-nav"
                  onKeyDown={[Function]}
                >
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="/#certification-page"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="/#certification-page"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="/#certification-page"
                        disabled={false}
                        href="/#certification-page"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="/#certification-page"
                          href="/#certification-page"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                        >
                          Back to Top
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/"
                          href="https://edd.ca.gov/about_edd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          About EDD
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/contact_edd.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/contact_edd.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/contact_edd.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/contact_edd.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/contact_edd.htm"
                          href="https://edd.ca.gov/about_edd/contact_edd.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Contact EDD
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                          href="https://edd.ca.gov/about_edd/conditions_of_use.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Conditions of Use
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/privacy_policy.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/privacy_policy.htm"
                          href="https://edd.ca.gov/about_edd/privacy_policy.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Privacy Policy
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/about_edd/accessibility.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/about_edd/accessibility.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/about_edd/accessibility.htm"
                        disabled={false}
                        href="https://edd.ca.gov/about_edd/accessibility.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/about_edd/accessibility.htm"
                          href="https://edd.ca.gov/about_edd/accessibility.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Accessibility
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://edd.ca.gov/sitemap.htm"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://edd.ca.gov/sitemap.htm"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://edd.ca.gov/sitemap.htm"
                        disabled={false}
                        href="https://edd.ca.gov/sitemap.htm"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://edd.ca.gov/sitemap.htm"
                          href="https://edd.ca.gov/sitemap.htm"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Site Map
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                </div>
              </ForwardRef>
            </Nav>
            <Nav
              className="flex-wrap"
              fill={false}
              justify={false}
            >
              <ForwardRef
                as="div"
                className="flex-wrap navbar-nav"
                onSelect={[Function]}
              >
                <div
                  className="flex-wrap navbar-nav"
                  onKeyDown={[Function]}
                >
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.facebook.com/californiaedd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.facebook.com/californiaedd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.facebook.com/californiaedd/"
                        disabled={false}
                        href="https://www.facebook.com/californiaedd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.facebook.com/californiaedd/"
                          href="https://www.facebook.com/californiaedd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="Facebook icon"
                            height="15"
                            src="images/facebook.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://twitter.com/CA_EDD"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://twitter.com/CA_EDD"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://twitter.com/CA_EDD"
                        disabled={false}
                        href="https://twitter.com/CA_EDD"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://twitter.com/CA_EDD"
                          href="https://twitter.com/CA_EDD"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="Twitter icon"
                            height="15"
                            src="images/twitter.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.linkedin.com/company/californiaedd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.linkedin.com/company/californiaedd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.linkedin.com/company/californiaedd/"
                        disabled={false}
                        href="https://www.linkedin.com/company/californiaedd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.linkedin.com/company/californiaedd/"
                          href="https://www.linkedin.com/company/californiaedd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="LinkedIn icon"
                            height="15"
                            src="images/linkedin.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.instagram.com/ca_edd/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.instagram.com/ca_edd/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.instagram.com/ca_edd/"
                        disabled={false}
                        href="https://www.instagram.com/ca_edd/"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.instagram.com/ca_edd/"
                          href="https://www.instagram.com/ca_edd/"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="Instagram icon"
                            height="15"
                            src="images/instagram.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                  <NavLink
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "SafeAnchor",
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    href="https://www.youtube.com/user/CaliforniaEDD"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <ForwardRef
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "SafeAnchor",
                          "render": [Function],
                        }
                      }
                      className="nav-link"
                      disabled={false}
                      href="https://www.youtube.com/user/CaliforniaEDD"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      <SafeAnchor
                        className="nav-link"
                        data-rb-event-key="https://www.youtube.com/user/CaliforniaEDD"
                        disabled={false}
                        href="https://www.youtube.com/user/CaliforniaEDD"
                        onClick={[Function]}
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <a
                          className="nav-link"
                          data-rb-event-key="https://www.youtube.com/user/CaliforniaEDD"
                          href="https://www.youtube.com/user/CaliforniaEDD"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <img
                            alt="YouTube icon"
                            height="15"
                            src="images/youtube.svg"
                            width="15"
                          />
                           
                        </a>
                      </SafeAnchor>
                    </ForwardRef>
                  </NavLink>
                </div>
              </ForwardRef>
            </Nav>
          </nav>
        </Navbar>
        <div
          className="bg-light secondary-footer"
        >
          <Container
            fluid={false}
          >
            <div
              className="container"
            >
              Copyright © 2020 State of California
            </div>
          </Container>
        </div>
      </footer>
    </Footer>
  </div>
</RetroCertsCertificationPage>
`;

exports[`<RetroCertsCertificationPage /> Certify week not found. 1`] = `
<RetroCertsCertificationPage
  routeComputedMatch={
    Object {
      "params": Object {
        "week": "2020-02-07",
      },
    }
  }
  setUserData={[Function]}
  userData={
    Object {
      "programPlan": Array [
        "UI full time",
        "UI part time",
      ],
      "status": "ok",
      "weeksToCertify": Array [
        0,
        1,
      ],
    }
  }
>
  <Redirect>
    <Lifecycle
      onMount={[Function]}
      onUpdate={[Function]}
    />
  </Redirect>
</RetroCertsCertificationPage>
`;
