// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders application with retro-certs 1`] = `
<Suspense
  fallback="Loading..."
>
  <Switch>
    <Route
      exact={true}
      path="/"
    >
      <Redirect
        to="/guide/benefits"
      />
    </Route>
    <Route
      component={[Function]}
      path="/guide"
    />
    <StaffViewRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/staff-view"
    />
    <StaffViewRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/staff-view/claimant-info"
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/weeks-to-certify"
      requiresAuthentication={true}
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/certify/:week"
      requiresAuthentication={true}
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/confirmation"
      requiresAuthentication={true}
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification"
    />
    <Route>
      <PageNotFound />
    </Route>
  </Switch>
</Suspense>
`;

exports[`<App /> renders application without retro-certs 1`] = `
<Suspense
  fallback="Loading..."
>
  <Switch>
    <Route
      exact={true}
      path="/"
    >
      <Redirect
        to="/guide/benefits"
      />
    </Route>
    <Route
      component={[Function]}
      path="/guide"
    />
    <StaffViewRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/staff-view"
    />
    <StaffViewRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/staff-view/claimant-info"
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/weeks-to-certify"
      requiresAuthentication={true}
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/certify/:week"
      requiresAuthentication={true}
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification/confirmation"
      requiresAuthentication={true}
    />
    <RetroCertsRoute
      pageComponent={[Function]}
      pageProps={
        Object {
          "setUserData": [Function],
          "userData": Object {
            "status": "not-logged-in",
          },
        }
      }
      path="/retroactive-certification"
    />
    <Route>
      <PageNotFound />
    </Route>
  </Switch>
</Suspense>
`;
