// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RetroCertsCertificationPage /> Certify for 2nd week of 2 1`] = `
<div
  id="overflow-wrapper"
>
  <Header />
  <main>
    <div
      className="container p-4"
    >
      <h1>
        Retroactive Unemployment Certification
      </h1>
      <p>
        <Trans
          i18nKey="retrocerts-certification.p1-multiple"
          t={[Function]}
          values={
            Object {
              "numberOfWeeks": 2,
              "weekForUser": 2,
            }
          }
        />
      </p>
      <h3>
        <Trans
          i18nKey="retrocerts-certification.form-header"
          t={[Function]}
          values={
            Object {
              "weekForUser": 2,
              "weekString": "02/09/20 - 02/15/20",
            }
          }
        />
      </h3>
      <Row
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText="You must be well enough to work everyday of the week to receive full benefits. Check ‘yes’ if a workday was missed due to being sick or injured."
            ifYes={false}
            inputName="tooSick"
            key="1tooSick"
            onChange={[Function]}
            questionNumber={1}
            questionText="Were you too sick or injured to work?"
          >
            <DaysSickQuestion
              helpText="You must report the numbers of days that you could not work during this week. Unemployment benefits are paid according to the number of days you are able to work this week."
              onChange={[Function]}
              questionText="If Yes, enter the number of days (1 - 7) you were unable to work."
            />
          </YesNoQuestion>
        </Col>
      </Row>
      <Row
        key="1couldNotAcceptWork"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.help-couldNotAcceptWork"
                t={[Function]}
              />
            }
            inputName="couldNotAcceptWork"
            onChange={[Function]}
            questionNumber={2}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.couldNotAcceptWork"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        key="1didYouLook"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.help-didYouLook"
                t={[Function]}
              />
            }
            ifYes={false}
            inputName="didYouLook"
            onChange={[Function]}
            questionNumber={3}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.didYouLook"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        key="1refuseWork"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.help-refuseWork"
                t={[Function]}
              />
            }
            ifYes={false}
            inputName="refuseWork"
            onChange={[Function]}
            questionNumber={4}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.refuseWork"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        key="1schoolOrTraining"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.help-schoolOrTraining"
                t={[Function]}
              />
            }
            ifYes={false}
            inputName="schoolOrTraining"
            onChange={[Function]}
            questionNumber={5}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-part-time.schoolOrTraining"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText="Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received."
            ifYes={false}
            inputName="workOrEarn"
            key="1workOrEarn"
            onChange={[Function]}
            questionNumber={6}
            questionText="Did you work or earn any money, whether you were paid or not?"
          >
            <EmployersQuestions
              onChange={[Function]}
            />
          </YesNoQuestion>
        </Col>
      </Row>
      <Row
        noGutters={false}
      >
        <Col>
          <Button
            active={false}
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Link",
                "propTypes": Object {
                  "innerRef": [Function],
                  "onClick": [Function],
                  "replace": [Function],
                  "target": [Function],
                  "to": [Function],
                },
                "render": [Function],
              }
            }
            className="text-dark bg-light"
            disabled={false}
            to="/retroactive-certification/certify/2020-02-08"
            type="button"
            variant="outline-secondary"
          >
            Back
          </Button>
        </Col>
        <Col
          style={
            Object {
              "textAlign": "end",
            }
          }
        >
          <Button
            active={false}
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="secondary"
          >
            Submit your certification
          </Button>
        </Col>
      </Row>
    </div>
  </main>
  <Footer />
</div>
`;

exports[`<RetroCertsCertificationPage /> Certify for one week of 2 1`] = `
<div
  id="overflow-wrapper"
>
  <Header />
  <main>
    <div
      className="container p-4"
    >
      <h1>
        Retroactive Unemployment Certification
      </h1>
      <p>
        <Trans
          i18nKey="retrocerts-certification.p1-multiple"
          t={[Function]}
          values={
            Object {
              "numberOfWeeks": 2,
              "weekForUser": 1,
            }
          }
        />
      </p>
      <h3>
        <Trans
          i18nKey="retrocerts-certification.form-header"
          t={[Function]}
          values={
            Object {
              "weekForUser": 1,
              "weekString": "02/02/20 - 02/08/20",
            }
          }
        />
      </h3>
      <Row
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText="You must be well enough to work everyday of the week to receive full benefits. Check ‘yes’ if a workday was missed due to being sick or injured."
            ifYes={false}
            inputName="tooSick"
            key="0tooSick"
            onChange={[Function]}
            questionNumber={1}
            questionText="Were you too sick or injured to work?"
          >
            <DaysSickQuestion
              helpText="You must report the numbers of days that you could not work during this week. Unemployment benefits are paid according to the number of days you are able to work this week."
              onChange={[Function]}
              questionText="If Yes, enter the number of days (1 - 7) you were unable to work."
            />
          </YesNoQuestion>
        </Col>
      </Row>
      <Row
        key="0couldNotAcceptWork"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.help-couldNotAcceptWork"
                t={[Function]}
              />
            }
            inputName="couldNotAcceptWork"
            onChange={[Function]}
            questionNumber={2}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.couldNotAcceptWork"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        key="0didYouLook"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.help-didYouLook"
                t={[Function]}
              />
            }
            inputName="didYouLook"
            onChange={[Function]}
            questionNumber={3}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.didYouLook"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        key="0refuseWork"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.help-refuseWork"
                t={[Function]}
              />
            }
            inputName="refuseWork"
            onChange={[Function]}
            questionNumber={4}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.refuseWork"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        key="0schoolOrTraining"
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.help-schoolOrTraining"
                t={[Function]}
              />
            }
            inputName="schoolOrTraining"
            onChange={[Function]}
            questionNumber={5}
            questionText={
              <Trans
                i18nKey="retrocerts-certification.questions.ui-full-time.schoolOrTraining"
                t={[Function]}
              />
            }
          />
        </Col>
      </Row>
      <Row
        noGutters={false}
      >
        <Col>
          <YesNoQuestion
            helpText="Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received."
            inputName="workOrEarn"
            key="0workOrEarn"
            onChange={[Function]}
            questionNumber={6}
            questionText="Did you work or earn any money, whether you were paid or not?"
          >
            <EmployersQuestions
              onChange={[Function]}
            />
          </YesNoQuestion>
        </Col>
      </Row>
      <Row
        noGutters={false}
      >
        <Col>
          <Button
            active={false}
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Link",
                "propTypes": Object {
                  "innerRef": [Function],
                  "onClick": [Function],
                  "replace": [Function],
                  "target": [Function],
                  "to": [Function],
                },
                "render": [Function],
              }
            }
            className="text-dark bg-light"
            disabled={false}
            to="/retroactive-certification/weeks-to-certify"
            type="button"
            variant="outline-secondary"
          >
            Back
          </Button>
        </Col>
        <Col
          style={
            Object {
              "textAlign": "end",
            }
          }
        >
          <Button
            active={false}
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "Link",
                "propTypes": Object {
                  "innerRef": [Function],
                  "onClick": [Function],
                  "replace": [Function],
                  "target": [Function],
                  "to": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            to="/retroactive-certification/certify/2020-02-15"
            type="submit"
            variant="secondary"
          >
            <Trans
              i18nKey="retrocerts-certification.button-next"
              t={[Function]}
              values={
                Object {
                  "nextWeekForUser": 2,
                }
              }
            />
          </Button>
        </Col>
      </Row>
    </div>
  </main>
  <Footer />
</div>
`;

exports[`<RetroCertsCertificationPage /> Certify week not found. 1`] = `
<Redirect
  to="/retroactive-certification/weeks-to-certify"
/>
`;
