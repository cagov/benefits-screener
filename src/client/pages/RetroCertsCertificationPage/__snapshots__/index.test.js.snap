// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RetroCertsCertificationPage /> Certify for 2nd week of 2 1`] = `
<div
  id="overflow-wrapper"
>
  <Header />
  <main
    className="questions"
    id="certification-page"
  >
    <div
      className="container p-4"
    >
      <h1>
        Retroactively Certify and Review
      </h1>
      <LanguageSelector
        className="mt-3 mb-4"
      />
      <h2
        className="h3 font-weight-bold mt-4"
      >
        <Trans
          i18nKey="retrocerts-certification.form-header"
          t={[Function]}
          values={
            Object {
              "weekForUser": 2,
              "weekString": "02/09/2020 - 02/15/2020",
            }
          }
        />
      </h2>
      <p>
        <Trans
          i18nKey="retrocerts-certification.p1-multiple"
          t={[Function]}
          values={
            Object {
              "numberOfWeeks": 2,
              "weekForUser": 2,
            }
          }
        />
         Your previous weeks are saved.
      </p>
      <Form
        inline={false}
        noValidate={true}
        onSubmit={[Function]}
        validated={false}
      >
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.help-tooSick"
              t={[Function]}
            />
          }
          ifYes={false}
          inputName="tooSick"
          key="1tooSick"
          onChange={[Function]}
          questionNumber={1}
          questionText="Were you too sick or injured to work?"
        >
          <DaysSickQuestion
            helpText="You must report the numbers of days that you could not work during this week. Unemployment benefits are paid according to the number of days you are able to work this week."
            onChange={[Function]}
            questionText="If yes, enter the number of days (1-7) you were unable to work."
          />
        </YesNoQuestion>
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.help-couldNotAcceptWork"
              t={[Function]}
            />
          }
          inputName="couldNotAcceptWork"
          key="1couldNotAcceptWork"
          onChange={[Function]}
          questionNumber={2}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.couldNotAcceptWork"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/09/2020 - 02/15/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.help-didYouLook"
              t={[Function]}
            />
          }
          ifYes={false}
          inputName="didYouLook"
          key="1didYouLook"
          onChange={[Function]}
          questionNumber={3}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.didYouLook"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/09/2020 - 02/15/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.help-refuseWork"
              t={[Function]}
            />
          }
          ifYes={false}
          inputName="refuseWork"
          key="1refuseWork"
          onChange={[Function]}
          questionNumber={4}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.refuseWork"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/09/2020 - 02/15/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.help-schoolOrTraining"
              t={[Function]}
            />
          }
          ifYes={false}
          inputName="schoolOrTraining"
          key="1schoolOrTraining"
          onChange={[Function]}
          questionNumber={5}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.schoolOrTraining"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/09/2020 - 02/15/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText="Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received."
          ifYes={false}
          inputName="workOrEarn"
          key="1workOrEarn"
          onChange={[Function]}
          questionNumber={6}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-part-time.workOrEarn"
              t={[Function]}
            />
          }
        >
          <EmployersQuestions
            onChange={[Function]}
          />
        </YesNoQuestion>
        <PerjuryCheckbox
          isAnyWeekPua={false}
        />
        <FormRow>
          <Col>
            <Button
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "Link",
                  "propTypes": Object {
                    "innerRef": [Function],
                    "onClick": [Function],
                    "replace": [Function],
                    "target": [Function],
                    "to": [Function],
                  },
                  "render": [Function],
                }
              }
              className="text-dark bg-light"
              disabled={false}
              onClick={[Function]}
              to="/retroactive-certification/certify/2020-02-08"
              type="button"
              variant="outline-secondary"
            >
              Back to Previous Week
            </Button>
          </Col>
          <Col
            style={
              Object {
                "textAlign": "end",
              }
            }
          >
            <Button
              active={false}
              disabled={false}
              type="submit"
              variant="secondary"
            >
              Submit
            </Button>
          </Col>
        </FormRow>
      </Form>
    </div>
  </main>
  <Footer
    backToTopTag="certification-page"
  />
</div>
`;

exports[`<RetroCertsCertificationPage /> Certify for one week of 2 1`] = `
<div
  id="overflow-wrapper"
>
  <Header />
  <main
    className="questions"
    id="certification-page"
  >
    <div
      className="container p-4"
    >
      <h1>
        Retroactively Certify and Review
      </h1>
      <LanguageSelector
        className="mt-3 mb-4"
      />
      <h2
        className="h3 font-weight-bold mt-4"
      >
        <Trans
          i18nKey="retrocerts-certification.form-header"
          t={[Function]}
          values={
            Object {
              "weekForUser": 1,
              "weekString": "02/02/2020 - 02/08/2020",
            }
          }
        />
      </h2>
      <p>
        <Trans
          i18nKey="retrocerts-certification.p1-multiple"
          t={[Function]}
          values={
            Object {
              "numberOfWeeks": 2,
              "weekForUser": 1,
            }
          }
        />
      </p>
      <Form
        inline={false}
        noValidate={true}
        onSubmit={[Function]}
        validated={false}
      >
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.help-tooSick"
              t={[Function]}
            />
          }
          ifYes={false}
          inputName="tooSick"
          key="0tooSick"
          onChange={[Function]}
          questionNumber={1}
          questionText="Were you too sick or injured to work?"
        >
          <DaysSickQuestion
            helpText="You must report the numbers of days that you could not work during this week. Unemployment benefits are paid according to the number of days you are able to work this week."
            onChange={[Function]}
            questionText="If yes, enter the number of days (1-7) you were unable to work."
          />
        </YesNoQuestion>
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.help-couldNotAcceptWork"
              t={[Function]}
            />
          }
          inputName="couldNotAcceptWork"
          key="0couldNotAcceptWork"
          onChange={[Function]}
          questionNumber={2}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.couldNotAcceptWork"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/02/2020 - 02/08/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.help-didYouLook"
              t={[Function]}
            />
          }
          inputName="didYouLook"
          key="0didYouLook"
          onChange={[Function]}
          questionNumber={3}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.didYouLook"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/02/2020 - 02/08/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.help-refuseWork"
              t={[Function]}
            />
          }
          inputName="refuseWork"
          key="0refuseWork"
          onChange={[Function]}
          questionNumber={4}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.refuseWork"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/02/2020 - 02/08/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.help-schoolOrTraining"
              t={[Function]}
            />
          }
          inputName="schoolOrTraining"
          key="0schoolOrTraining"
          onChange={[Function]}
          questionNumber={5}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.schoolOrTraining"
              t={[Function]}
              values={
                Object {
                  "weekString": "02/02/2020 - 02/08/2020",
                }
              }
            />
          }
        />
        <YesNoQuestion
          helpText="Look at the date each week begins and ends. If you performed any work during this week, all earnings must be reported regardless if payment has been received."
          inputName="workOrEarn"
          key="0workOrEarn"
          onChange={[Function]}
          questionNumber={6}
          questionText={
            <Trans
              i18nKey="retrocerts-certification.questions.ui-full-time.workOrEarn"
              t={[Function]}
            />
          }
        >
          <EmployersQuestions
            onChange={[Function]}
          />
        </YesNoQuestion>
        <FormRow>
          <Col>
            <Button
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "Link",
                  "propTypes": Object {
                    "innerRef": [Function],
                    "onClick": [Function],
                    "replace": [Function],
                    "target": [Function],
                    "to": [Function],
                  },
                  "render": [Function],
                }
              }
              className="text-dark bg-light"
              disabled={false}
              onClick={[Function]}
              to="/retroactive-certification/weeks-to-certify"
              type="button"
              variant="outline-secondary"
            >
              Back
            </Button>
          </Col>
          <Col
            style={
              Object {
                "textAlign": "end",
              }
            }
          >
            <Button
              active={false}
              disabled={false}
              type="submit"
              variant="secondary"
            >
              <Trans
                i18nKey="retrocerts-certification.button-next"
                t={[Function]}
                values={
                  Object {
                    "nextWeekForUser": 2,
                  }
                }
              />
            </Button>
          </Col>
        </FormRow>
      </Form>
    </div>
  </main>
  <Footer
    backToTopTag="certification-page"
  />
</div>
`;

exports[`<RetroCertsCertificationPage /> Certify week not found. 1`] = `
<Redirect
  to="/retroactive-certification/weeks-to-certify"
/>
`;
